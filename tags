!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
aggs	solution1.py	/^aggs = {}$/;"	kind:variable	line:9
colors	solution1.py	/^colors = ["#0a72ff", "#1eff06", "#ff1902", "#2dfefe", "#827c01", "#fe07a6", "#a8879f", "#fcff04", "#c602fe", "#16be61", "#ff9569", "#05b3ff", "#ecffa7", "#3f8670", "#e992ff", "#ffb209", "#e72955", "#83bf02", "#bba67b", "#fe7eb1", "#7570c1", "#85bfd1", "#f97505", "#9f52e9", "#8ffec2", "#dad045", "#b85f60", "#fe4df2", "#75ff6c", "#78a55a", "#ae6a02", "#bebeff", "#ffb3b3", "#a4fe04", "#ffc876", "#c548a7", "#d6492b", "#547da7", "#358b06", "#95caa9", "#07b990", "#feb6e9", "#c9ff76", "#02b708", "#7b7a6e", "#1090fb", "#a46d41", "#09ffa9", "#bb76b7", "#06b5b6", "#df307c", "#9b83fd", "#ff757c", "#0cd9fd", "#bdba61", "#c89d26", "#91df7e", "#108c49", "#7b7d40", "#fdd801", "#048699", "#fc9d40", "#ff0f3b", "#87a72c", "#a25cc2", "#b95a82", "#bb8a80", "#cce733", "#f7b58d", "#adaaab", "#c141c8", "#08fbd8", "#ff6de4", "#c26040", "#bb9bf6", "#b08f44", "#6d96de", "#8dcaff", "#5be51c", "#68c948", "#ff5fb8", "#7f9872", "#9aa5ca", "#bad292", "#c32fe4", "#fc92df", "#e08eaa", "#fd0afd", "#2daad4", "#d96d2a", "#69e0c9", "#ce4b69", "#79ca8d", "#6e8e9a", "#ffec83", "#de0fb5", "#8471a2", "#bbd766", "#e94805", "#06ff54", "#9cf046", "#6a63ff", "#05e774", "#e38c7b", "#f6ff75", "#3cda96", "#d68e4b", "#d774fe", "#feca4c", "#80ff95", "#5571e1", "#6da9a1", "#a5a20d", "#d5484a", "#688326", "#e7d08f", "#4e8653", "#5cad4c", "#c19bcf", "#ff0e76", "#d3ff0b", "#a66877", "#6ddde3", "#a544fe", "#c2fdb5", "#8f7955", "#fd735b", "#8497fd", "#fd919d", "#fdf346", "#fe5581", "#fd4e50", "#0ca82e", "#d4a8b2", "#d14e91", "#0d9069", "#0c8bca", "#fd9403", "#d5b401", "#adc32e", "#efacfe", "#9da668", "#57b093", "#787791", "#ff6f39", "#9e790a", "#d18903", "#abb49a", "#a06790", "#cf70cb", "#c8fe96", "#488834", "#dcbf55", "#e82f23", "#9a90d5", "#9cd54d", "#c7936c", "#05dc4a", "#98f372", "#907275", "#167dcf", "#db2b9f", "#16b16e", "#49a802", "#66cd1d", "#905fdc", "#cecd02", "#a376ca", "#939540", "#a7e103", "#d9ac6e", "#099334", "#db7701", "#3facbd", "#a0cb76", "#6aa3d5", "#dcaf98", "#b6692e", "#a76a59", "#04908e", "#d771ab", "#a69683", "#8268d0", "#72ab79", "#f70c8b", "#ebaa4c", "#9ce7b8", "#5f837a", "#df708c", "#ad9c32", "#39ffc2", "#d28388", "#79d5f9", "#e35eff", "#ffaf72", "#55e0b3", "#e8c0fe", "#6a69ed", "#fe07d3", "#0c86af"]$/;"	kind:variable	line:36
data	solution1.py	/^data = []$/;"	kind:variable	line:32
genre	solution1.py	/^        genre = mov['genre']$/;"	kind:variable	line:21
get_all_movie_data	movies.py	/^def get_all_movie_data():$/;"	kind:function	line:100
get_movies	movies.py	/^def get_movies():$/;"	kind:function	line:16
go	solution1.py	/^import plotly.graph_objs as go$/;"	kind:namespace	line:4
idx	solution1.py	/^    idx = year%2000$/;"	kind:variable	line:18
it	solution1.py	/^it = 0$/;"	kind:variable	line:35
layout	solution1.py	/^layout = {$/;"	kind:variable	line:70
loadCountriesFor	movies.py	/^def loadCountriesFor(movies):$/;"	kind:function	line:45
loadGenresFor	movies.py	/^def loadGenresFor(movies):$/;"	kind:function	line:85
loadRatingsFor	movies.py	/^def loadRatingsFor(movies):$/;"	kind:function	line:60
marker	solution1.py	/^        marker={'color':colors[it-1]}$/;"	kind:variable	line:55
marker	solution1.py	/^    marker={'color': colors[21]}$/;"	kind:variable	line:67
means	solution1.py	/^means = np.zeros(11)$/;"	kind:variable	line:39
mnums	solution1.py	/^mnums = np.zeros(11)$/;"	kind:variable	line:40
mode	solution1.py	/^        mode='markers',$/;"	kind:variable	line:54
movieRegex	movies.py	/^movieRegex = re.compile(pattern)$/;"	kind:variable	line:11
movies	solution1.py	/^import movies$/;"	kind:namespace	line:5
movies	solution1.py	/^movies = movies.get_all_movie_data()$/;"	kind:variable	line:7
movies.py	movies.py	1;"	kind:file	line:1
name	solution1.py	/^        name=genre,$/;"	kind:variable	line:53
name	solution1.py	/^    name='Mean',$/;"	kind:variable	line:66
np	movies.py	/^import numpy as np$/;"	kind:namespace	line:3
np	solution1.py	/^import numpy as np$/;"	kind:namespace	line:1
nums	solution1.py	/^nums = {}$/;"	kind:variable	line:10
os	movies.py	/^import os$/;"	kind:namespace	line:2
pattern	movies.py	/^pattern = '(.*?) +\\((.*?)\\)(?: +\\(.*?\\))?(?: +?\\{(.*)\\})?\\t+?([\\w\\d?]+)$'$/;"	kind:variable	line:10
pickle	movies.py	/^   import cPickle as pickle$/;"	kind:namespace	line:6
pickle	movies.py	/^   import pickle$/;"	kind:namespace	line:8
plotly	solution1.py	/^import plotly$/;"	kind:namespace	line:2
plotly	solution1.py	/^import plotly.graph_objs as go$/;"	kind:namespace	line:4
re	movies.py	/^import re$/;"	kind:namespace	line:1
rows	solution1.py	/^rows = []$/;"	kind:variable	line:33
solution1.py	solution1.py	1;"	kind:file	line:1
tools	solution1.py	/^from plotly import tools$/;"	kind:namespace	line:3
trace	solution1.py	/^    trace = go.Scatter($/;"	kind:variable	line:50
x	solution1.py	/^        x=years,$/;"	kind:variable	line:51
x	solution1.py	/^    x=years,$/;"	kind:variable	line:64
y	solution1.py	/^        y=aggs[genre],$/;"	kind:variable	line:52
y	solution1.py	/^    y=means,$/;"	kind:variable	line:65
year	solution1.py	/^    year = mov['year']$/;"	kind:variable	line:15
yearPattern	movies.py	/^yearPattern = '(\\d{4})'$/;"	kind:variable	line:13
yearRegex	movies.py	/^yearRegex = re.compile(yearPattern)$/;"	kind:variable	line:14
years	solution1.py	/^years = np.arange(2000, 2011).tolist()$/;"	kind:variable	line:34
